<?php

namespace App\Entity\Exploit;

use App\Repository\Exploit\TagRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;

#[ORM\Entity(repositoryClass: TagRepository::class)]
class Tag
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column]
    private ?int $id = null;

    #[ORM\Column(length: 255)]
    private ?string $name = null;

    #[ORM\ManyToMany(targetEntity: Exploit::class, mappedBy: 'tags')]
    private Collection $exploits;

    public function __construct()
    {
        $this->exploits = new ArrayCollection();
    }

    public function __toString(): string
    {
     return $this->getName();
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getName(): ?string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * @return Collection<int, Exploit>
     */
    public function getExploits(): Collection
    {
        return $this->exploits;
    }

    public function addExploit(Exploit $exploit): self
    {
        if (!$this->exploits->contains($exploit)) {
            $this->exploits->add($exploit);
            $exploit->addTag($this);
        }

        return $this;
    }

    public function removeExploit(Exploit $exploit): self
    {
        if ($this->exploits->removeElement($exploit)) {
            $exploit->removeTag($this);
        }

        return $this;
    }
}
