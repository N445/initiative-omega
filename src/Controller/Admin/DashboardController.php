<?php

namespace App\Controller\Admin;

use App\Entity\Activity;
use App\Entity\Contact;
use App\Entity\Event\Event;
use App\Entity\Event\Template;
use App\Entity\Event\Type;
use App\Entity\Exploit\Exploit;
use App\Entity\Exploit\Tag;
use App\Entity\Member\Member;
use App\Entity\Role;
use App\Entity\Rsi\Ship\Manufacturer;
use App\Entity\Rsi\Ship\Ship;
use App\Entity\User;
use App\Repository\Member\MemberRepository;
use App\Repository\Rsi\Ship\ShipRepository;
use App\Service\Admin\Dashboard\ChartsProvider;
use EasyCorp\Bundle\EasyAdminBundle\Config\Assets;
use EasyCorp\Bundle\EasyAdminBundle\Config\Dashboard;
use EasyCorp\Bundle\EasyAdminBundle\Config\MenuItem;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractDashboardController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\UX\Chartjs\Builder\ChartBuilderInterface;
use Symfony\UX\Chartjs\Model\Chart;

class DashboardController extends AbstractDashboardController
{
    private MemberRepository      $memberRepository;

    private ChartBuilderInterface $chartBuilder;

    private ShipRepository        $shipRepository;

    private ChartsProvider        $chartsProvider;

    public function __construct(
        MemberRepository      $memberRepository,
        ChartBuilderInterface $chartBuilder,
        ShipRepository        $shipRepository,
        ChartsProvider        $chartsProvider
    )
    {
        $this->memberRepository = $memberRepository;
        $this->chartBuilder     = $chartBuilder;
        $this->shipRepository   = $shipRepository;
        $this->chartsProvider   = $chartsProvider;
    }

    #[Route('/admin6314a8e', name: 'admin')]
    public function index(): Response
    {
        return $this->render('admin/my-dashboard.html.twig', [
            'charts' => [
                'memberChart' => $this->chartsProvider->getMemberChart(),
                'shipsChart'  => $this->chartsProvider->getShipsChart(),
            ],
        ]);
    }

    public function configureAssets(): Assets
    {
        return (parent::configureAssets())
            ->addWebpackEncoreEntry('stimulus')
            ->addWebpackEncoreEntry('admin')
            ->addWebpackEncoreEntry('admin-fullcalendar')
        ; // TODO: Change the autogenerated stub
    }

    public function configureDashboard(): Dashboard
    {
        return Dashboard::new()
                        ->renderContentMaximized()
                        ->setTitle('Shadow Of Caliban')
        ;
    }

    public function configureMenuItems(): iterable
    {
        yield MenuItem::section('Site web');
        yield MenuItem::linkToRoute('Le site web', 'fa fa-home', 'HOMEPAGE');
        yield MenuItem::linkToDashboard('Admin Dashboard', 'fa-solid fa-chart-line');
        yield MenuItem::linkToCrud('Contacts', 'fa-solid fa-message', Contact::class);
        yield MenuItem::linktoRoute('Import exploits', 'fa-solid fa-file-import', 'ADMIN_EXPLOITS_IMPORT');
        yield MenuItem::linkToCrud('Exploits', 'fa-solid fa-camera', Exploit::class);
        yield MenuItem::linkToCrud('Exploits tags', 'fa-solid fa-tag', Tag::class);
        yield MenuItem::section('Events');
        yield MenuItem::linkToCrud('Type d\'event', 'fa-solid fa-tag', Type::class);
        yield MenuItem::linkToCrud('Events', 'fa-regular fa-calendar-days', Event::class);
        yield MenuItem::section('Comportation');
        yield MenuItem::linkToCrud('Membres', 'fa-solid fa-users', Member::class);
        yield MenuItem::linkToCrud('Flotte', 'fa-solid fa-rocket', User\Fleet::class);
        yield MenuItem::linkToCrud('Activités', 'fa-solid fa-user-astronaut', Activity::class);
        yield MenuItem::linkToCrud('Rôles', 'fa-solid fa-sitemap', Role::class);
        yield MenuItem::section('Utilisateurs');
        yield MenuItem::linkToCrud('Utilisateurs', 'fa-solid fa-users', User::class);
        yield MenuItem::linkToCrud('Referral program', 'fa-solid fa-gift', User\Referral::class);
        yield MenuItem::section('RSI');
        yield MenuItem::linkToCrud('Fabriquants', 'fa-solid fa-industry', Manufacturer::class);
        yield MenuItem::linkToCrud('Ships', 'fa-solid fa-rocket', Ship::class);
        // yield MenuItem::linkToCrud('The Label', 'fas fa-list', EntityClass::class);
    }
}
